{
  "manifest": {
    "name": "vega-statistics",
    "version": "1.2.3",
    "description": "Statistical routines and probability distributions.",
    "keywords": [
      "vega",
      "statistics",
      "probability",
      "distribution"
    ],
    "license": "BSD-3-Clause",
    "author": {
      "name": "Jeffrey Heer",
      "url": "http://idl.cs.washington.edu"
    },
    "main": "build/vega-statistics.js",
    "module": "index",
    "jsnext:main": "index",
    "repository": {
      "type": "git",
      "url": "https://github.com/vega/vega-statistics.git"
    },
    "scripts": {
      "build": "npm run test && uglifyjs build/vega-statistics.js -c -m -o build/vega-statistics.min.js",
      "pretest": "rm -rf build && mkdir build && rollup -g d3-array:d3 -f umd -n vega -o build/vega-statistics.js -- index.js",
      "test": "tape 'test/**/*-test.js' && eslint index.js src test",
      "prepublishOnly": "npm run build",
      "postpublish": "git push && git push --tags && zip -j build/vega-statistics.zip -- LICENSE README.md build/vega-statistics.js build/vega-statistics.min.js"
    },
    "dependencies": {
      "d3-array": "^2.0.2"
    },
    "devDependencies": {
      "eslint": "5",
      "rollup": "0.67.4",
      "tape": "4",
      "uglify-js": "3"
    },
    "_registry": "npm",
    "_loc": "/home/jovyan/.cache/yarn/v2/npm-vega-statistics-1.2.3-4a7ca4c5fd9cc00c3700cb9cde336995439a55fa/package.json",
    "readmeFilename": "README.md",
    "readme": "# vega-statistics\n\nStatistical routines and probability distributions.\n\n## API Reference\n\n* [Random Number Generation](#random-number-generation)\n* [Distributions](#distributions)\n* [Statistics](#statistics)\n\n### Random Number Generation\n\n<a name=\"random\" href=\"#random\">#</a>\nvega.<b>random</b>()\n[<>](https://github.com/vega/vega-statistics/blob/master/src/random.js \"Source\")\n\nReturns a uniform pseudo-random number in the domain [0, 1). By default this\nis simply a call to JavaScript's built-in `Math.random` function. All Vega\nroutines that require random numbers should use this function.\n\n<a name=\"setRandom\" href=\"#setRandom\">#</a>\nvega.<b>setRandom</b>(<i>randfunc</i>)\n[<>](https://github.com/vega/vega-statistics/blob/master/src/random.js \"Source\")\n\nSets the random number generator to the provided function _randfunc_.\nSubsequent calls to <a href=\"#random\">random</a> will invoke the new\nfunction to generate random numbers. Setting a custom generator can be\nhelpful if one wishes to use an alternative source of randomness or replace\nthe default generator with a deterministic function for testing purposes.\n\n### Distributions\n\nMethods for sampling and calculating probability distributions. Each method\ntakes a set of distributional parameters and returns a distribution object\nrepresenting a random variable.\n\nDistribution objects expose the following methods:\n* dist.<b>sample</b>(): Samples a random value drawn from this distribution.\n* dist.<b>pdf</b>(<i>value</i>): Calculates the value of the [probability\ndensity function](https://en.wikipedia.org/wiki/Probability_density_function)\nat the given input domain *value*.\n* dist.<b>cdf</b>(<i>value</i>): Calculates the value of the [cumulative\ndistribution function](https://en.wikipedia.org/wiki/Cumulative_distribution_function)\nat the given input domain *value*.\n* dist.<b>icdf</b>(<i>probability</i>): Calculates the inverse of the\n[cumulative distribution function](https://en.wikipedia.org/wiki/Cumulative_distribution_function)\nfor the given input *probability*.\n\n<a name=\"randomNormal\" href=\"#randomNormal\">#</a>\nvega.<b>randomNormal</b>([<i>mean</i>, <i>stdev</i>])\n[<>](https://github.com/vega/vega-statistics/blob/master/src/normal.js \"Source\")\n\nCreates a distribution object representing a [normal (Gaussian) probability\ndistribution](https://en.wikipedia.org/wiki/Normal_distribution) with specified\n*mean* and standard deviation *stdev*. If unspecified, the mean defaults to `0`\nand the standard deviation defaults to `1`.\n\nOnce created, *mean* and *stdev* values can be accessed or modified using\nthe `mean` and `stdev` getter/setter methods.\n\n<a name=\"randomUniform\" href=\"#randomUniform\">#</a>\nvega.<b>randomUniform</b>([<i>min</i>, <i>max</i>])\n[<>](https://github.com/vega/vega-statistics/blob/master/src/uniform.js \"Source\")\n\nCreates a distribution object representing a [continuous uniform probability\ndistribution](https://en.wikipedia.org/wiki/Uniform_distribution_(continuous))\nover the interval [*min*, *max*). If unspecified, *min* defaults to `0` and\n*max* defaults to `1`. If only one argument is provided, it is interpreted as\nthe *max* value.\n\nOnce created, *min* and *max* values can be accessed or modified using\nthe `min` and `max` getter/setter methods.\n\n<a name=\"randomInteger\" href=\"#randomInteger\">#</a>\nvega.<b>randomInteger</b>([<i>min</i>,] <i>max</i>)\n[<>](https://github.com/vega/vega-statistics/blob/master/src/integer.js \"Source\")\n\nCreates a distribution object representing a [discrete uniform probability\ndistribution](https://en.wikipedia.org/wiki/Discrete_uniform_distribution) over\nthe integer domain [*min*, *max*). If only one argument is provided, it is\ninterpreted as the *max* value. If unspecified, *min* defaults to `0`.\n\nOnce created, *min* and *max* values can be accessed or modified using\nthe `min` and `max` getter/setter methods.\n\n<a name=\"randomMixture\" href=\"#randomMixture\">#</a>\nvega.<b>randomMixture</b>(<i>distributions</i>[, <i>weights</i>])\n[<>](https://github.com/vega/vega-statistics/blob/master/src/mixture.js \"Source\")\n\nCreates a distribution object representing a (weighted) mixture of probability\ndistributions. The *distributions* argument should be an array of distribution\nobjects. The optional *weights* array provides proportional numerical weights\nfor each distribution. If provided, the values in the *weights* array will be\nnormalized to ensure that weights sum to 1. Any unspecified weight values\ndefault to `1` (prior to normalization). Mixture distributions do **not**\nsupport the `icdf` method: calling `icdf` will result in an error.\n\nOnce created, the *distributions* and *weights* arrays can be accessed or\nmodified using the `distributions` and `weights` getter/setter methods.\n\n<a name=\"randomKDE\" href=\"#randomKDE\">#</a>\nvega.<b>randomKDE</b>(<i>values</i>[, <i>bandwidth</i>])\n[<>](https://github.com/vega/vega-statistics/blob/master/src/kde.js \"Source\")\n\nCreates a distribution object representing a\n[kernel density estimate](https://en.wikipedia.org/wiki/Kernel_density_estimation)\nfor an array of numerical *values*. This method uses a Gaussian kernel to\nestimate a smoothed, continuous probability distribution. The optional\n*bandwidth* parameter determines the width of the Gaussian kernel. If the\n*bandwidth* is either `0` or unspecified, a default bandwidth value will be\nautomatically estimated based on the input data. KDE distributions do **not**\nsupport the `icdf` method: calling `icdf` will result in an error.\n\nOnce created, *data* and *bandwidth* values can be accessed or modified using\nthe `data` and `bandwidth` getter/setter methods.\n\n### Statistics\n\nStatistical methods for calculating bins, bootstrapped confidence intervals,\nand quartile boundaries.\n\n<a name=\"bin\" href=\"#bin\">#</a>\nvega.<b>bin</b>(<i>options</i>)\n[<>](https://github.com/vega/vega-statistics/blob/master/src/bin.js \"Source\")\n\nDetermine a quantitative binning scheme, for example to create a histogram.\nBased on the options provided given, this method will search over a space of\npossible bins, aligning step sizes with a given number base and applying\nconstraints such as the maximum number of allowable bins. Given a set of\noptions (see below), returns an object describing the binning scheme,\nin terms of `start`, `stop` and `step` properties.\n\nThe supported options properties are:\n- _extent_: (required) A two-element (`[min, max]`) array indicating the range of desired bin values.\n- _base_: The number base to use for automatic bin determination (default base `10`).\n- _maxbins_: The maximum number of allowable bins (default `20`).\n- _step_: An exact step size to use between bins. If provided, the _maxbins_ and _steps_ options will be ignored.\n- _steps_: An array of allowable step sizes to choose from. If provided, the _maxbins_ option will be ignored.\n- _minstep_: A minimum allowable step size (particularly useful for integer values, default `0`).\n- _divide_: An array of scale factors indicating allowable subdivisions. The default value is `[5, 2]`, which indicates that the method may consider dividing bin sizes by 5 and/or 2. For example, for an initial step size of 10, the method can check if bin sizes of 2 (= 10/5), 5 (= 10/2), or 1 (= 10/(5*2)) might also satisfy the given constraints.\n- _nice_: Boolean indicating if the start and stop values should be nicely-rounded relative to the step size (default `true`).\n\n```js\nvega.bin({extent:[0, 1], maxbins:10}); // {start:0, stop:1, step:0.1}\nvega.bin({extent:[0, 1], maxbins:5}); // {start:0, stop:10, step:2}\nvega.bin({extent:[5, 10], maxbins:5}); // {start:5, stop:10, step:1}\n```\n\n<a name=\"bootstrapCI\" href=\"#bootstrapCI\">#</a>\nvega.<b>bootstrapCI</b>(<i>array</i>, <i>samples</i>, <i>alpha</i>[, <i>accessor</i>])\n[<>](https://github.com/vega/vega-statistics/blob/master/src/bootstrapCI.js \"Source\")\n\nCalculates a [bootstrapped](https://en.wikipedia.org/wiki/Bootstrapping_(statistics))\n[confidence interval](https://en.wikipedia.org/wiki/Confidence_interval) for an\ninput *array* of values, based on a given number of *samples* iterations and a\ntarget *alpha* value. For example, an *alpha* value of `0.05` corresponds to a\n95% confidence interval An optional *accessor* function can be used to first\nextract numerical values from an array of input objects, and is equivalent to\nfirst calling `array.map(accessor)`. This method ignores null, undefined and\nNaN values.\n\n<a name=\"quartiles\" href=\"#quartiles\">#</a>\nvega.<b>quartiles</b>(<i>array</i>[, <i>accessor</i>])\n[<>](https://github.com/vega/vega-statistics/blob/master/src/quartiles.js \"Source\")\n\nGiven an *array* of numeric values, returns an array of\n[quartile](https://en.wikipedia.org/wiki/Quartile) boundaries.\nThe return value is a 3-element array consisting of the first, second (median),\nand third quartile boundaries. An optional *accessor* function can be used to\nfirst extract numerical values from an array of input objects, and is\nequivalent to first calling `array.map(accessor)`. This method ignores\nnull, undefined and NaN values.\n",
    "licenseText": "Copyright (c) 2016, University of Washington Interactive Data Lab\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors\n  may be used to endorse or promote products derived from this software\n  without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/vega-statistics/-/vega-statistics-1.2.3.tgz#4a7ca4c5fd9cc00c3700cb9cde336995439a55fa",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/vega-statistics/-/vega-statistics-1.2.3.tgz",
    "hash": "4a7ca4c5fd9cc00c3700cb9cde336995439a55fa",
    "registry": "npm",
    "packageName": "vega-statistics"
  },
  "registry": "npm",
  "hash": "4a7ca4c5fd9cc00c3700cb9cde336995439a55fa"
}